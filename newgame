local library = require(game.ReplicatedStorage.Library.Client.Save)
local save = library.Get()

-- Функция для преобразования арабских чисел в римские
local function toRoman(num)
    local romanNumerals = {
        [1] = "I", [2] = "II", [3] = "III", [4] = "IV", [5] = "V",
        [6] = "VI", [7] = "VII"
    }
    return romanNumerals[num] or tostring(num)  -- Возвращает римскую цифру или число как строку
end

-- Создание GUI
local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
local textLabelLucky = Instance.new("TextLabel", screenGui)
local textLabelInsta = Instance.new("TextLabel", screenGui)

-- Настройки для Lucky
textLabelLucky.Size = UDim2.new(0, 400, 0, 200)
textLabelLucky.Position = UDim2.new(0.5, -200, 0.3, -100)
textLabelLucky.BackgroundColor3 = Color3.fromRGB(173, 255, 47)
textLabelLucky.TextColor3 = Color3.fromRGB(0, 0, 0)
textLabelLucky.TextScaled = true
textLabelLucky.TextWrapped = true
textLabelLucky.Text = "Lucky:\n"

-- Настройки для Insta
textLabelInsta.Size = UDim2.new(0, 400, 0, 200)
textLabelInsta.Position = UDim2.new(0.5, -200, 0.7, -100)
textLabelInsta.BackgroundColor3 = Color3.fromRGB(255, 182, 193)
textLabelInsta.TextColor3 = Color3.fromRGB(0, 0, 0)
textLabelInsta.TextScaled = true
textLabelInsta.TextWrapped = true
textLabelInsta.Text = "Insta:\n"

local function updateInfo()
    local luckyItems = {}
    local instaItems = {}

    for _, v in pairs(save.Inventory.Consumable) do
        if string.find(v.id, "Lucky") then
            table.insert(luckyItems, {id = v.id, tn = tonumber(v.tn), amount = v._am or 1})
        elseif string.find(v.id, "Insta") then
            table.insert(instaItems, {id = v.id, tn = tonumber(v.tn), amount = v._am or 1})
        end
    end

    -- Сортировка по tn
    table.sort(luckyItems, function(a, b) return a.tn < b.tn end)
    table.sort(instaItems, function(a, b) return a.tn < b.tn end)

    -- Обновление текста для Lucky
    local luckyText = "Lucky:\n"
    for _, item in ipairs(luckyItems) do
        luckyText = luckyText .. string.format("%s %s (Количество: %d)\n", item.id, toRoman(item.tn), item.amount)
    end
    textLabelLucky.Text = luckyText == "Lucky:\n" and "Нет предметов" or luckyText

    -- Обновление текста для Insta
    local instaText = "Insta:\n"
    for _, item in ipairs(instaItems) do
        instaText = instaText .. string.format("%s %s (Количество: %d)\n", item.id, toRoman(item.tn), item.amount)
    end
    textLabelInsta.Text = instaText == "Insta:\n" and "Нет предметов" or instaText
end

-- Обновление информации каждые 10 секунд
updateInfo()
local running = true

local function startUpdating()
    while running do
        wait(10)
        save = library.Get()  -- Обновляем данные
        updateInfo()
    end
end

-- Запуск цикла обновления в отдельном потоке
coroutine.wrap(startUpdating)()

-- Удаление GUI через минуту
wait(60)
running = false  -- Останавливаем цикл обновления
screenGui:Destroy()  -- Удаляем GUI
